/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TestContract2 } from "../TestContract2";

export class TestContract2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestContract2> {
    return super.deploy(overrides || {}) as Promise<TestContract2>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestContract2 {
    return super.attach(address) as TestContract2;
  }
  connect(signer: Signer): TestContract2__factory {
    return super.connect(signer) as TestContract2__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContract2 {
    return new Contract(address, _abi, signerOrProvider) as TestContract2;
  }
}

const _abi = [
  {
    inputs: [],
    name: "getValue2",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_val2",
        type: "string",
      },
    ],
    name: "setValue2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "val2",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806395cacbe014610046578063c515205d14610064578063f043dc5d1461006c575b600080fd5b61004e610081565b60405161005b9190610301565b60405180910390f35b61004e61010f565b61007f61007a366004610251565b6101a1565b005b6000805461008e90610356565b80601f01602080910402602001604051908101604052809291908181526020018280546100ba90610356565b80156101075780601f106100dc57610100808354040283529160200191610107565b820191906000526020600020905b8154815290600101906020018083116100ea57829003601f168201915b505050505081565b60606000805461011e90610356565b80601f016020809104026020016040519081016040528092919081815260200182805461014a90610356565b80156101975780601f1061016c57610100808354040283529160200191610197565b820191906000526020600020905b81548152906001019060200180831161017a57829003601f168201915b5050505050905090565b80516101b49060009060208401906101b8565b5050565b8280546101c490610356565b90600052602060002090601f0160209004810192826101e6576000855561022c565b82601f106101ff57805160ff191683800117855561022c565b8280016001018555821561022c579182015b8281111561022c578251825591602001919060010190610211565b5061023892915061023c565b5090565b5b80821115610238576000815560010161023d565b60006020828403121561026357600080fd5b81356001600160401b038082111561027a57600080fd5b818401915084601f83011261028e57600080fd5b8135818111156102a0576102a0610391565b604051601f8201601f19908116603f011681019083821181831017156102c8576102c8610391565b816040528281528760208487010111156102e157600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b8181101561032e57858101830151858201604001528201610312565b81811115610340576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061036a57607f821691505b6020821081141561038b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212203645f8cf18c271fb19cc7d5408a11206d7af2513bc6a16408651a2f294cafa7964736f6c63430008070033";
